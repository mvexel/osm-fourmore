# PostgreSQL Configuration for FourMore
# Optimized for Hetzner CCX23: 4 vCPU, 16GB RAM
# Based on PostGIS performance tuning recommendations
# https://postgis.net/docs/manual-3.6/postgis_administration.html#database_tuning_configuration

# ============================================================================
# MEMORY SETTINGS
# ============================================================================

# shared_buffers: Amount of memory dedicated to PostgreSQL for caching data
# Recommendation: 25-40% of available RAM
# For 16GB system: 4GB (25%)
shared_buffers = 4GB

# work_mem: Memory used for sort operations and hash tables per operation
# Recommendation: Balance between query performance and concurrent users
# Lower values for many concurrent users, higher for complex queries
work_mem = 64MB

# maintenance_work_mem: Memory for maintenance operations (VACUUM, CREATE INDEX)
# Recommendation: 32MB to 1GB on production servers
# Higher values speed up index creation and data loading
maintenance_work_mem = 1GB

# effective_cache_size: Estimate of memory available for disk caching
# Used by query planner, not actual memory allocation
# Recommendation: 50-75% of total RAM
# For 16GB system: 12GB (75%)
effective_cache_size = 12GB

# ============================================================================
# PARALLEL QUERY SETTINGS (PostgreSQL 9.6+, PostGIS 2.3+)
# ============================================================================

# max_worker_processes: Maximum number of background processes
# Recommendation: Match number of CPU cores
max_worker_processes = 4

# max_parallel_workers_per_gather: Workers per parallel operation
# Recommendation: Set to number of available processors / 2
# Enables parallel query execution for improved performance
max_parallel_workers_per_gather = 2

# max_parallel_workers: Maximum parallel workers across all operations
# Recommendation: Match number of CPU cores
max_parallel_workers = 4

# max_parallel_maintenance_workers: Workers for maintenance operations
# Useful for CREATE INDEX, VACUUM operations
max_parallel_maintenance_workers = 2

# ============================================================================
# QUERY PLANNER SETTINGS
# ============================================================================

# constraint_exclusion: Enables query optimization for partitioned tables
# Recommendation: 'partition' for PostgreSQL 8.4+
constraint_exclusion = partition

# random_page_cost: Cost estimate for non-sequential disk access
# Lower for SSD storage (Hetzner uses NVMe SSDs)
random_page_cost = 1.1

# effective_io_concurrency: Number of concurrent disk I/O operations
# Higher for SSD storage
effective_io_concurrency = 200

# ============================================================================
# CONNECTION SETTINGS
# ============================================================================

# max_connections: Maximum number of concurrent connections
# Recommendation: Balance with work_mem (more connections = lower work_mem)
max_connections = 100

# ============================================================================
# WRITE-AHEAD LOG (WAL) SETTINGS
# ============================================================================

# wal_buffers: Memory for WAL data before writing to disk
# Recommendation: -1 (auto-tune based on shared_buffers)
wal_buffers = -1

# checkpoint_completion_target: Spread out checkpoint writes
# Higher values reduce I/O spikes
checkpoint_completion_target = 0.9

# ============================================================================
# LOGGING & MONITORING
# ============================================================================

# Log slow queries for performance monitoring
log_min_duration_statement = 1000  # Log queries taking > 1 second

# Log checkpoints for monitoring
log_checkpoints = on

# Track query planning and execution time
track_io_timing = on

# Enable detailed query statistics (useful for performance analysis)
shared_preload_libraries = 'pg_stat_statements'
