services:
  postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - ${FOURMORE_ENV_FILE:-.env.development}
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      ENVIRONMENT: development
      DEBUG: "true"
    volumes:
      - ./backend/app:/app/app
      - ./fourmore_shared:/app/fourmore_shared
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  data-pipeline:
    build:
      context: .
      dockerfile: data-pipeline/Dockerfile
    env_file:
      - ${FOURMORE_ENV_FILE:-.env.development}
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      OSM_DATA_FILE: ${OSM_DATA_FILE}
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
