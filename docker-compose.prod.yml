version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.4
    restart: unless-stopped
    environment:
      POSTGRES_DB: fourmore
      POSTGRES_USER: fourmore
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fourmore_prod_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fourmore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fourmore -d fourmore"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - fourmore-network
    command: redis-server --appendonly yes

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://fourmore:${DB_PASSWORD:-fourmore_prod_password}@postgres:5432/fourmore
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-change_this_in_production}
      - ENVIRONMENT=production
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost}
      - POPULATE_UTAH_DATA=${POPULATE_UTAH_DATA:-false}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - fourmore-network
    volumes:
      - ./data:/app/data

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN:-fourmore.example.com}
    depends_on:
      - backend
    networks:
      - fourmore-network
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile.prod", "--adapter", "caddyfile"]

volumes:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  fourmore-network:
    driver: bridge