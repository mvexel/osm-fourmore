services:
  postgres:
    image: postgis/postgis:15-3.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fourmore}
      POSTGRES_USER: ${POSTGRES_USER:-fourmore}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fourmore_dev_password}
    ports:
      - "${POSTGRES_PORT:-5432:5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fourmore} -d ${POSTGRES_DB:-fourmore}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - fourmore-network

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379:6379}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - fourmore-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: ${BACKEND_TARGET:-production}
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://fourmore:fourmore_dev_password@postgres:5432/fourmore}
      - OSM_CLIENT_ID=${OSM_CLIENT_ID}
      - OSM_CLIENT_SECRET=${OSM_CLIENT_SECRET}
      - OSM_REDIRECT_URI=${OSM_REDIRECT_URI}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-1440}
      - DEBUG=${DEBUG:-false}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    ports:
      - "${BACKEND_PORT:-8000:8000}"
    volumes:
      - ${BACKEND_VOLUMES:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - fourmore-network
    # Development override
    command: >
      sh -c "
      if [ '${ENVIRONMENT:-production}' = 'development' ]; then
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
      else
        gunicorn --bind 0.0.0.0:8000 --workers 4 --worker-class uvicorn.workers.UvicornWorker --access-logfile - --error-logfile - app.main:app
      fi"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${FRONTEND_TARGET:-production}
    ports:
      - "${FRONTEND_PORT:-3000:3000}"
    volumes:
      - ${FRONTEND_VOLUMES:-}
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - fourmore-network

  data-pipeline:
    build:
      context: .
      dockerfile: data-pipeline/Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://fourmore:fourmore_dev_password@postgres:5432/fourmore}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=${POSTGRES_DB:-fourmore}
      - DATABASE_USER=${POSTGRES_USER:-fourmore}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD:-fourmore_dev_password}
      - DATA_DIR=/app/data
      - OSM_DATA_FILE=${OSM_DATA_FILE:-/app/data/utah-latest.osm.pbf}
    volumes:
      - ${DATA_VOLUMES:-./data:/app/data}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fourmore-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  osm_data:

networks:
  fourmore-network:
    driver: bridge